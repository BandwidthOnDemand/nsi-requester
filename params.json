{"name":"nsi-requester","tagline":"NSI Requestor Web Application","body":"## Introduction\r\nThe NSI Requester (nsi-requester) is an Open Grid Forum Network Service Interface Connection Service version 2 (OGF NSI CS v2) compliant web-based client application (a uRA in NSI speak).  All operations specified in the [OGF NSI CS v2 specification](http://www.ogf.org/documents/GFD.212.pdf) are supported by this application making it the perfect interface for testing an NSI deployment.\r\n\r\nThe nsi-requester can be deployed in a number of configurations, each achieving an NSI compliant deployment.  Choosing the correct options may take some trial and error, but using the information held within this wiki should reduce your time to deployment considerably.\r\n\r\n## Contents\r\n* [Quick Start](https://github.com/BandwidthOnDemand/nsi-requester/wiki/Quick-Start)\r\n* [Integrated Development Environments](https://github.com/BandwidthOnDemand/nsi-requester/wiki/Integrated-Development-Environments)\r\n\r\n## Quick Start\r\nThe nsi-requester utilizes the [Play Framework](http://www.playframework.com) as a runtime environment.  This will require Java to be installed on your platform of choice (Java 1.8 is preferred), and as a minimum either Play 2.3.1 or SBT 0.13.5.  We recommend installing SBT since it will pull in the required Play Framework dependencies.  Instructions for SBT download and installation can be found [here](http://www.scala-sbt.org/download.html).\r\n\r\nFor a Mac you can use either of `brew` or `port` to do the installation:\r\n\r\n```\r\n$ brew install sbt\r\n```\r\nor\r\n```\r\n$ port install sbt\r\n```\r\n\r\nTo download, build, and run the vanilla default configuration perform the following commands:\r\n\r\n```\r\ngit clone https://github.com/BandwidthOnDemand/nsi-requester.git\r\ncd nsi-requester\r\nsbt run\r\n```\r\n\r\nThe nsi-requester application will be accessible by bowser at the default location [http://localhost:9000](http://localhost:9000).\r\n\r\nTailor your installation by choosing a deployment option, configure the application `conf/application.conf`, logging `conf/application-logger.xml`, build a production load `sbt stage`, and use either upstart or a customized shell script `scripts/` to start the application.\r\n\r\n## Integrated Development Environments\r\nThe nsi-requester application is written in Scala utilizing the Play Framework.  If you are looking for an Integrated Development Environments (IDE) to modify the code we recommend one of the following.\r\n \r\n### Eclipse\r\nFor editing in Eclipse the [Scala IDE](http://scala-ide.org/) is very usefull.\r\n\r\nEclipse Juno users please use the follwoing update site:\r\n[Eclipse IDE 2.1 milestones](http://download.scala-ide.org/releases-juno-29/milestone/site)\r\n\r\nGenerating the Eclipse project files can be done by running `eclipse with-source=true` in the sbt console.\r\n\r\n### IntelliJ Community Edition\r\nThe [IntelliJ IDE](http://www.jetbrains.com/idea/download/) is an extremely popular IDE for Java, and now it is becoming increasingly popular for Scala development as well through an [add-on plugin](http://plugins.jetbrains.com/plugin/?id=1347&_ga=1.31920766.1378817622.1369841145) and direct SBT integration.  For information on IntelliJ Scala support and tutorials can be found [here](http://www.jetbrains.com/idea/features/scala.html).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}